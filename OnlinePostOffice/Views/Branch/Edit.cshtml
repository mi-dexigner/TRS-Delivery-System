@model OnlinePostOffice.Models.tbl_branch

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Admin.cshtml";
    var getCities = (IEnumerable<OnlinePostOffice.Models.tbl_cities>)ViewBag.CityList;
}

<div class="card">
    <div class="card-header page-header column">
        <h3>Edit Branch </h3>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            // session user id
            @Html.Hidden("user_id", Session["id"]);
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            // created_at date
            @Html.Hidden("created_at", Model.created_at);

            // updated_at date
            @Html.Hidden("updated_at", @DateTime.Now.ToString("M-d-yyyy"));

            <table class="form-table" role="presentation">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)

                <tr class="form-field">
                    <td>@Html.Label("Branch Code")</td>
                    <td>
                        @Html.TextBoxFor(model => model.branch_code, new
                   { @readonly = "readonly", Value = Guid.NewGuid().ToString("N").Substring(0, 6) })
                        @Html.ValidationMessageFor(model => model.branch_code, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <td>@Html.Label("Branch Name")</td>
                    <td>
                        @Html.EditorFor(model => model.branch_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.branch_name, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <td>@Html.Label("Email")</td>
                    <td>
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <td>@Html.Label("phone")</td>
                    <td>
                        @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <td>@Html.Label("Address")</td>
                    <td>
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <td>@Html.Label("City ")</td>
                    <td>
                       
                      
                        <select class="form-control" id="citiesDropdown" name="city_id">
                          <option>Please Select a City</option>
                            @foreach (var city in getCities)
                            {
                               
                                <option value="@city.id" @(city.id == Model.city_id ? "selected" : "")>@city.title</option>
                            }
                        </select>

                        @Html.ValidationMessageFor(model => model.city_id, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <td> @Html.Label("Zipcode")</td>
                    <td>
                        @Html.EditorFor(model => model.zipcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.zipcode, "", new { @class = "text-danger" })
                    </td>
                </tr>

               
            </table>
            <p class="submit"><input type="submit" name="updatebranch" id="updatebranch" class="btn" value="Update Branch"></p>

        }


    </div>
</div>
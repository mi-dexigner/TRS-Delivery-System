@model OnlinePostOffice.Models.tbl_branch

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Admin.cshtml";
    var getCities = (IEnumerable<OnlinePostOffice.Models.tbl_cities>)ViewBag.cityList;
}

<div class="card">
    <div class="card-header page-header column">
        <h3>Add New Branch</h3>
    </div>

    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            // session user id
            @Html.Hidden("user_id", Session["id"]);
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            // created_at date
            @Html.Hidden("created_at", @DateTime.Now.ToString("M-d-yyyy"));

            // updated_at date
            @Html.Hidden("updated_at", "");

            <table class="form-table" role="presentation">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <tr class="form-field">
                    <th>@Html.Label("Branch Code")</th>
                    <td>
                        @Html.TextBoxFor(model => model.branch_code, new
                   {  @readonly = "readonly", Value = Guid.NewGuid().ToString("N").Substring(0, 6) })
                        @Html.ValidationMessageFor(model => model.branch_code, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <th>@Html.Label("Branch Name")</th>
                    <td>
                        @Html.EditorFor(model => model.branch_name)
                        @Html.ValidationMessageFor(model => model.branch_name, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="form-field">
                    <th>@Html.Label("Email")</th>
                    <td class="col-md-10">
                        @Html.EditorFor(model => model.email)
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </td>
                </tr>

    <tr class="form-field">
        <th>@Html.Label("Phone")</th>
        <td class="col-md-10">
            @Html.EditorFor(model => model.phone)
            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
        </td>
    </tr>

<tr class="form-field">
    <th>@Html.Label("Address")</th>
    <td class="col-md-10">
        @Html.EditorFor(model => model.address)
        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
    </td>
</tr>

    <tr class="form-field">
        <th>@Html.Label("City")</th>
        <td class="col-md-10">

           
            <select class="form-control" id="citiesDropdown" name="city_id">
                <option value="0">Please Select a City</option>
                @foreach (var city in getCities)
                {
                    <option value="@city.id">@city.title</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.city_id, "", new { @class = "text-danger" })
        </td>
    </tr>

    <tr class="form-field">
        <th>@Html.Label("Zip Code")</th>
        <td class="col-md-10">
            @Html.EditorFor(model => model.zipcode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.zipcode, "", new { @class = "text-danger" })
        </td>
   </tr>



        </table>
        <p class="submit"><input type="submit" name="createbranch" id="createbranch" class="btn" value="Add New Branch"></p>
    }

        </div>
        </div>

